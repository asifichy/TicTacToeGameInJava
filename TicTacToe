package com.mycompany.tictactoe1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class TicTacToe1 {
    //making them global so that everyone can access them.
    static ArrayList<Integer> playerPosition = new ArrayList<Integer>();
    static ArrayList<Integer> cpuPosition = new ArrayList<Integer>();
    
    public static void main(String[] args) {
       char[][] gameBoard = {{' ', '!', ' ', '!', ' '},
                             {'-', '+', '-', '+', '-'},
                             {' ', '!', ' ', '!', ' '},
                             {'-', '+', ' ', '+', '-'},
                             {' ', '!', ' ', '!', ' '}};
                
        printGameBoard(gameBoard);
        
        while(true)
        {
            Scanner input = new Scanner(System.in);
            System.out.println("Enter your placement (1-9): ");
            int playerPos = input.nextInt();
        
        while (playerPosition.contains(playerPos) || cpuPosition.contains(playerPos))
        {
            System.out.println("This position is taken. Enter your position again: ");
            playerPos = input.nextInt();
        }
                     
        placePieces(gameBoard, playerPos, "player");  
        String result = checkWinner();
        if (result.length() > 0)
         {
             System.out.println(result);
         }
        
        Random rand = new Random();
        int cpuPos = rand.nextInt(9) + 1;
        while (playerPosition.contains(cpuPos) || cpuPosition.contains(cpuPos))
        {
            cpuPos = rand.nextInt(9) + 1;
        }
         
        placePieces(gameBoard, cpuPos, "cpu");
        
        printGameBoard(gameBoard);
        
         result = checkWinner();  
         if (result.length() > 0)
         {
             System.out.println(result);
         }
         
        }       
              
    }
    
    //for Printing gameBoard
    public static void printGameBoard(char[][] gameBoard){
        for (char[] row : gameBoard)
       {
           for (char c : row)
           {
               System.out.print(c);
           }
           System.out.println();
       }
    }
    
    //for placement for the pieces
    public static void placePieces(char[][] gameBoard, int pos, String user)
    {
        char symbol = ' ';
        // if the user is player then placement will be 'X' otherwise the placement will be 'O' 
        if (user.equals("player"))
        {
            symbol = 'X';
            playerPosition.add(pos);
        }
        else if (user.equals("cpu"))
        {
            symbol = 'O';
            cpuPosition.add(pos);
        }
        
        switch(pos)
        {
            case 1: 
            {
                gameBoard[0][0] = symbol;
                break;
            }
            case 2: 
            {
                gameBoard[0][2] = symbol;
                break;
            }
            case 3: 
            {
                gameBoard[0][4] = symbol;
                break;
            }
            case 4: 
            {
                gameBoard[2][0] = symbol;
                break;
            }
            case 5: 
            {
                gameBoard[2][2] = symbol;
                break;
            }
            case 6: 
            {
                gameBoard[2][4] = symbol;
                break;
            }
            case 7: 
            {
                gameBoard[4][0] = symbol;
                break;
            }
            case 8: 
            {
                gameBoard[4][2] = symbol;
                break;
            }
            case 9: 
            {
                gameBoard[4][4] = symbol;
                break;
            } 
            default:
            break;
        } 
    }
    
    //for checkingWinner
    public static String checkWinner()
    {
        List topRow = Arrays.asList(1,2,3);
        List midRow = Arrays.asList(4,5,6);
        List bottomRow = Arrays.asList(7,8,9);
        List leftcol = Arrays.asList(1,4,7);
        List midcol = Arrays.asList(2,5,8);
        List rightcol = Arrays.asList(3,6,9);
        List cross1 = Arrays.asList(1,5,9);
        List cross2 = Arrays.asList(7,5,3);
        
        List<List> winningConditions = new ArrayList<List>();
       
        winningConditions.add(topRow);
        winningConditions.add(midRow);
        winningConditions.add(bottomRow);
        winningConditions.add(leftcol);
        winningConditions.add(midcol);
        winningConditions.add(rightcol);
        winningConditions.add(cross1);
        winningConditions.add(cross2);
        
        for (List l : winningConditions)
        {
            if (playerPosition.containsAll(l))
            {
                return "Congratulations. You won!";
            }
            else if (cpuPosition.containsAll(l))
            {
                return "CPU wins! Sorry.";
            }
            else if (playerPosition.size() + cpuPosition.size() == 9)
            {
                return "It's a tie!";
            }
        }    
        return "";
    }

}
